@page "/empleados/editar/{EmpleadoId:int}"
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@attribute [Authorize(Roles = "ADMIN")]

<h3>Actualizar Empleado</h3>

@if (Empleado == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioEmpleado OnValidSubmit="ActualizarEmpleado" Empleado="Empleado"></FormularioEmpleado>
}

@code {
    [Parameter] public int EmpleadoId { get; set; }
    private EntidadEmpleado Empleado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<EntidadEmpleado>($"api/empleados/{EmpleadoId}");

        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("empleados");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Empleado = httpResponse.Response;
        }
    }

    private async Task ActualizarEmpleado()
    {
        var httpResponse = await repositorio.Put("api/empleados", Empleado);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("empleados");
        }
    }
}
