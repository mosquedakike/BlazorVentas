@inject IRepositorio repositorio

<EditForm Model="Empleado" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="Empleado.NombreEmpleado"></InputText>
        <ValidationMessage For="@(()=> Empleado.NombreEmpleado)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Apellido Paterno</label>
        <InputText class="form-control" @bind-Value="Empleado.ApPaterno"></InputText>
        <ValidationMessage For="@(()=> Empleado.ApPaterno)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Apellido Materno</label>
        <InputText class="form-control" @bind-Value="Empleado.ApMaterno"></InputText>
        <ValidationMessage For="@(()=> Empleado.ApMaterno)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Puesto</label>
        <InputText class="form-control" @bind-Value="Empleado.PuestoEmpleado"></InputText>
        <ValidationMessage For="@(()=> Empleado.PuestoEmpleado)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Proyecto</label>
        <InputSelect class="form-control" @bind-Value="Empleado.ProyectoId">
            <option value="">--Selecciona proyecto--</option>
            @foreach (var proyecto in proyectos)
            {
                <option value="@proyecto.ProyectoId">@proyecto.NombreProyecto</option>
            }
        </InputSelect>
    </div>
    @*<div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked @bind-value="oEmpleado.Estatus">
            <label class="form-check-label" for="flexSwitchCheckChecked">Activar Empleado</label>
        </div>*@
    <br />
    <button class="btn btn-success" type="submit">Guardar</button>
</EditForm>

@code {
    [Parameter] public EntidadEmpleado Empleado { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    List<EntidadProyecto> proyectos = new List<EntidadProyecto>();

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<EntidadProyecto>>("api/proyectos");
        proyectos = responseHttp.Response;
    }
}
