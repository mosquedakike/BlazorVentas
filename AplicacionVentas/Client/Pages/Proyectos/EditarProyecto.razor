@page "/proyectos/editar/{ProyectoId:int}"
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@attribute [Authorize(Roles = "ADMIN")]

<h3>Actualizar Proyecto</h3>

@if (Proyecto == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioProyecto OnValidSubmit="ActualizarProyecto" Proyecto="Proyecto"></FormularioProyecto>
}

@code {
    [Parameter] public int ProyectoId { get; set; }
    private EntidadProyecto Proyecto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<EntidadProyecto>($"api/proyectos/{ProyectoId}");

        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("proyectos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Proyecto = httpResponse.Response;
        }
    }

    private async Task ActualizarProyecto()
    {
        var httpResponse = await repositorio.Put("api/proyectos", Proyecto);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("proyectos");
        }
    }
}
